plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.8'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {

	// Spring Boot Core
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// Spring Security (JWT와 함께 사용하려면 필수)
	implementation 'org.springframework.boot:spring-boot-starter-security' // <-- 이 의존성 추가

	// Spring Boot Validation (DTO 유효성 검사 @Valid, @NotBlank, @Email 등 사용 시 필수)
	implementation 'org.springframework.boot:spring-boot-starter-validation' // <-- 이 의존성 추가

	// MyBatis
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.4'

	// Database Driver
	runtimeOnly 'com.mysql:mysql-connector-j'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// JWT (JJWT)
	// 최신 안정 버전 0.12.6 사용	
	implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6' // JSON 파싱을 위해 Jackson 사용
	
	// WebSocket (필요하다면 유지)
	implementation 'org.springframework.boot:spring-boot-starter-websocket'

	// Development Tools
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	//시크릿키(의존성)
	 annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	// Test Dependencies
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.4'
	testImplementation 'org.springframework.security:spring-security-test' // Spring Security 테스트용
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}